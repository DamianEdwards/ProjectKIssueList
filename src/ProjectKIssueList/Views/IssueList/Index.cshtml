@model IssueListViewModel

@{
    ViewData["PageTitlePrefix"] = Model.RepoSetName;
    ViewData["GitHubUserName"] = Model.GitHubUserName;
    ViewData["RepoSetNames"] = Model.RepoSetNames;
    ViewData["CurrentRepoSetName"] = Model.RepoSetName;
}

<div class="row">
    <div class="col-md-8">
        <ul class="nav nav-pills" id="app-tabs">
            <li class="active"><a href="#group-by-assignee">Group by assignee</a></li>
            <li class=""><a href="#group-by-milestone">Group by milestone</a></li>
            <li class=""><a href="#group-by-repo">Group by repo</a></li>
        </ul>
    </div>
    <div class="col-md-4 text-right">
        <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#collapseExample">
            Included repos <span class="badge">@Model.ReposIncluded.Length</span>
        </button>
    </div>
</div>

<br />

<div class="collapse" id="collapseExample">
    <div class="well">
        <ol>
            @foreach (var repo in Model.ReposIncluded)
            {
                <li><a href="https://github.com/@repo.Owner/@repo.Name/issues">@repo.Owner/@repo.Name</a></li>
            }
        </ol>
    </div>
</div>

@foreach (var repoFailure in Model.RepoFailures)
{
    <div class="alert alert-danger"><strong>@repoFailure.Repo.Owner/@repoFailure.Repo.Name</strong>: @repoFailure.FailureMessage</div>
}

<div class="row">
    <div class="col-md-2 col-md-push-10">
        <h3>Issues</h3>
        <div class="alert alert-info" data-toggle="tooltip" data-placement="left" title="Open issues not in Backlog milestone">
            <a href="@Model.OpenIssuesQuery">Open</a> <span class="badge">@Model.TotalIssues</span>
        </div>
        <div class="alert alert-info" data-toggle="tooltip" data-placement="left" title="Open issues with '2 - Working' label">
            <a href="@Model.WorkingIssuesQuery">Working</a> <span class="badge">@Model.WorkingIssues</span>
        </div>
        <div class="alert alert-info" data-toggle="tooltip" data-placement="left" title="Open issues not in a milestone">
            <a href="@Model.UntriagedIssuesQuery">Untriaged</a> <span class="badge">@Model.UntriagedIssues</span>
        </div>
        <h3>PRs</h3>
        <div class="alert alert-info" data-toggle="tooltip" data-placement="left" title="Open PRs">
            <a href="@Model.OpenPRsQuery">Open</a> <span class="badge">@Model.PullRequests.Count</span>
        </div>
        <div class="alert alert-danger" data-toggle="tooltip" data-placement="left" title="Open PRs over 14 days old">
            <a href="@Model.StalePRsQuery">Stale</a> <span class="badge">@Model.PullRequests.Where(pr => pr.PullRequest.CreatedAt < DateTimeOffset.Now.AddDays(-14)).Count()</span>
        </div>
    </div>

    <div class="col-md-10 col-md-pull-2">
        <div class="tab-content">
            <div class="tab-pane active" id="group-by-assignee">
                @foreach (var assignee in Model.GroupByAssignee.Assignees)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title"><strong>@(assignee.Assignee ?? "<not assigned>")</strong> <span class="badge">@assignee.Issues.Count</span></h3>
                        </div>
                        <div class="panel-body">
                            @if (assignee.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in assignee.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <h4>Not working on any assigned issues</h4>
                            }

                            @if (assignee.OtherIssues.Any())
                            {
                                <div>
                                    <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#collapse-otherissues-@assignee.Assignee">
                                        Other assigned issues <span class="badge">@assignee.OtherIssues.Count</span>
                                    </button>
                                </div>

                                <div class="collapse" id="collapse-otherissues-@assignee.Assignee" style="margin-top:10px">
                                    <ul class="list-group">
                                        @foreach (var issue in assignee.OtherIssues)
                                        {
                                            <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                                @await Html.PartialAsync("_Issue", issue)
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <h4>No other assigned issues</h4>
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="tab-pane" id="group-by-milestone">
                @foreach (var milestone in Model.GroupByMilestone.Milestones)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title"><strong>@(milestone.Milestone ?? "<no milestone>")</strong> <span class="badge">@milestone.Issues.Count</span></h3>
                        </div>
                        <div class="panel-body">
                            @if (milestone.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in milestone.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                @* TODO: Is this needed? There wouldn't be an milestone if it has no issues... *@
                                <h3>Not working on issues in this milestone</h3>
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="tab-pane" id="group-by-repo">
                @foreach (var repo in Model.GroupByRepo.Repos)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title"><strong>@repo.Repo.Owner/@repo.Repo.Name</strong> <span class="badge">@repo.Issues.Count</span></h3>
                        </div>
                        <div class="panel-body">
                            @if (repo.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in repo.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <h3>Not working on issues in this repo</h3>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><strong>Pull Requests</strong> <span class="badge">@Model.PullRequests.Count</span></h3>
            </div>
            <div class="panel-body">
                @if (Model.PullRequests.Any())
                {
                    <ul class="list-group">
                        @foreach (var pullRequest in Model.PullRequests)
                        {
                            <li class="list-group-item" style="@(pullRequest.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                @await Html.PartialAsync("_PullRequest", pullRequest)
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <h3>No open pull requests, go write some code!</h3>
                }
            </div>
        </div>
    </div>
</div>

<div>
    <p class="text-center">Last updated on @Model.LastUpdated</p>
</div>

@section scripts
{
    <script type="text/javascript">
        $('#app-tabs a').click(function (e) {
            e.preventDefault()
            $(this).tab('show')
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        });
    </script>
}
