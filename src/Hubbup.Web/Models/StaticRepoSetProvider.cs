using System;
using System.Collections.Generic;

namespace Hubbup.Web.Models
{
    public class StaticRepoSetProvider : IRepoSetProvider
    {
        private static readonly Dictionary<string, RepoSetDefinition> _repoSetList = new Dictionary<string, RepoSetDefinition>(StringComparer.OrdinalIgnoreCase)
        {
            {
                "kcore",
                new RepoSetDefinition
                {
                    AssociatedPersonSetName = "Murat",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    RepoExtraLinks = new List<RepoExtraLink>
                    {
                        new RepoExtraLink { Title = "KoreBuild dashboard", Url = "https://korebuild.azurewebsites.net/" },
                        new RepoExtraLink { Title = "ASP.NET CI", Url = "http://aspnetci/" },
                        new RepoExtraLink { Title = "Travis CI", Url = "https://travis-ci.org/aspnet" },
                        new RepoExtraLink { Title = "ASP.NET Perf", Url = "http://aspnetperf.azurewebsites.net/" },
                    },
                    Repos = new RepoDefinition[]
                    {
                        new RepoDefinition("aspnet", "aspnet-docker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet-win-docker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "BasicMiddleware", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Caching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Final", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Patch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CompilationAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CoreCLR", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DataProtection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnvm", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-cli-commands", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-do", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-watch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Entropy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "FileSystem", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Helios", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "homebrew-dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Hosting", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpClient", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "IISIntegration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KestrelHttpServer", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KoreBuild", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-build", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-package", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Logging", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PlatformAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Proxy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ResponseCaching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Roslyn", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Security", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ServerTests", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Session", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Setup", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Signing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "StaticFiles", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Universe", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "UserSecrets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebListener", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebSockets", RepoInclusionLevel.AllItems),

                        new RepoDefinition("aspnet", "Antiforgery", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "benchmarks", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "BugTracker", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Common", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "CORS", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "DependencyInjection", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Diagnostics", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "DnxTools", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Docs", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "EventNotification", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Home", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "HtmlAbstractions", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Infrastructure", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "jquery-ajax-unobtrusive", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "jquery-validation-unobtrusive", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "JsonPatch", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Localization", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "MusicStore", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Mvc", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "NerdDinner", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "PackageSearch", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Performance", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Razor", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "RazorTooling", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Release", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Routing", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Scaffolding", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Cpp", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Java", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-JS", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Net", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Redis", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Server", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-ServiceBus", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-SqlServer", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Stress", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Templates", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Testing", RepoInclusionLevel.ItemsAssignedToPersonSet),

                        new RepoDefinition("dotnet", "cli", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("dotnet", "corefx", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("omnisharp", "omnisharp-roslyn", RepoInclusionLevel.ItemsAssignedToPersonSet),
                    },
                }
            },
            {
                "mvc",
                new RepoSetDefinition
                {
                    AssociatedPersonSetName = "Eilon",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    RepoExtraLinks = new List<RepoExtraLink>
                    {
                        new RepoExtraLink { Title = "KoreBuild dashboard", Url = "https://korebuild.azurewebsites.net/" },
                        new RepoExtraLink { Title = "ASP.NET CI", Url = "http://aspnetci/" },
                        new RepoExtraLink { Title = "Travis CI", Url = "https://travis-ci.org/aspnet" },
                        new RepoExtraLink { Title = "ASP.NET Perf", Url = "http://aspnetperf.azurewebsites.net/" },
                    },
                    Repos = new RepoDefinition[]
                    {
                        new RepoDefinition("aspnet", "Antiforgery", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet.xunit", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Common", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Final", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Patch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CORS", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DependencyInjection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Diagnostics", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DnxTools", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EventNotification", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HtmlAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Infrastructure", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-ajax-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-validation-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "JsonPatch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Localization", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStore", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStoreAngular2", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Mvc", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PackageSearch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Razor", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "RazorTooling", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Routing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Testing", RepoInclusionLevel.AllItems),

                        new RepoDefinition("aspnet", "aspnet-docker", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "aspnet-win-docker", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "BasicMiddleware", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "benchmarks", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "BugTracker", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Caching", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Coherence", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "CompilationAbstractions", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "CoreCLR", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "DataProtection", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Docs", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "dotnet-cli-commands", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "dnvm", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "dnx", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "dotnet-do", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "dotnet-watch", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Entropy", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "FileSystem", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Helios", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Home", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Hosting", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "HttpAbstractions", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "IISIntegration", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "KestrelHttpServer", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "KoreBuild", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "libuv-build", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "libuv-package", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Logging", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "NerdDinner", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Performance", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "PlatformAbstractions", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Proxy", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Release", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "ResponseCaching", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Roslyn", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Scaffolding", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Security", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "ServerTests", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Session", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Cpp", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Java", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-JS", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Client-Net", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Redis", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-Server", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-ServiceBus", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "SignalR-SqlServer", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "StaticFiles", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Stress", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Templates", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "Universe", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "UserSecrets", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "WebListener", RepoInclusionLevel.ItemsAssignedToPersonSet),
                        new RepoDefinition("aspnet", "WebSockets", RepoInclusionLevel.ItemsAssignedToPersonSet),

                        new RepoDefinition("dotnet", "cli", RepoInclusionLevel.ItemsAssignedToPersonSet),
                    },
                }
            },
            {
                "data",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "Diego",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SqlClient", RepoInclusionLevel.AllItems),

                        new RepoDefinition("aspnet", "Release", RepoInclusionLevel.ItemsAssignedToPersonSet),
                    },
                }
            },
            {
                "k-ship",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "aspnetef",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    RepoExtraLinks = new List<RepoExtraLink>
                    {
                        new RepoExtraLink { Title = "KoreBuild dashboard", Url = "https://korebuild.azurewebsites.net/" },
                        new RepoExtraLink { Title = "ASP.NET CI", Url = "http://aspnetci/" },
                        new RepoExtraLink { Title = "Travis CI", Url = "https://travis-ci.org/aspnet" },
                    },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "aspnet-docker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "BasicMiddleware", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Caching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CompilationAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CoreCLR", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DataProtection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnvm", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-cli-commands", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-do", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-watch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Entropy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "FileSystem", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Helios", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "homebrew-dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Hosting", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpClient", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "IISIntegration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KestrelHttpServer", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KoreBuild", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-build", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-package", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Logging", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PlatformAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Proxy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ResponseCaching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Roslyn", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Security", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ServerTests", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Session", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Setup", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Signing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "StaticFiles", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Universe", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "UserSecrets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebListener", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebSockets", RepoInclusionLevel.AllItems),
                        // ---
                        new RepoDefinition("aspnet", "Antiforgery", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet.xunit", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Common", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CORS", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DependencyInjection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Diagnostics", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DnxTools", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EventNotification", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HtmlAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-ajax-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-validation-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "JsonPatch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Localization", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStore", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStoreAngular2", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Mvc", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PackageSearch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Razor", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "RazorTooling", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Routing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Testing", RepoInclusionLevel.AllItems),
                        // ---
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SqlClient", RepoInclusionLevel.AllItems),
                        // ---
                        new RepoDefinition("aspnet", "Infrastructure", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "pm",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "Home", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "NerdDinner", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "get.asp.net", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "go.asp.net", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "live.asp.net", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "docs",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "Docs",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "ApiDocs", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Docs", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Docs-internal", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "k-engr",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "Announcements", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "BugTracker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EndToEnd", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "External", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "IBC", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "kbot", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KExpense", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStore-Authorization", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Perf", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Performance", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Reporting", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "specs", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Stress", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "TeamCityTrigger", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "k-fun",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    LabelFilter = "Fundamentals",
                    Repos = new RepoDefinition[] {
                        // bespoke
                        new RepoDefinition("aspnet", "benchmarks", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Reliability", RepoInclusionLevel.AllItems),
                        // and others
                        new RepoDefinition("aspnet", "BasicMiddleware", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Caching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CompilationAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CoreCLR", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DataProtection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnvm", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-cli-commands", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-do", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-watch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Entropy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "FileSystem", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "homebrew-dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Hosting", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpClient", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "IISIntegration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KestrelHttpServer", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-build", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Logging", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PlatformAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Proxy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ResponseCaching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Roslyn", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Security", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ServerTests", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Session", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Setup", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Signing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "StaticFiles", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Universe", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "UserSecrets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebListener", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebSockets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Antiforgery", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet.xunit", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Common", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CORS", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DependencyInjection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Diagnostics", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DnxTools", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EventNotification", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HtmlAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-ajax-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-validation-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "JsonPatch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Localization", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStore", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Mvc", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PackageSearch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Razor", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "RazorTooling", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Routing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Testing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework6", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework.Benchmarks", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SqlClient", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "nuget",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "NuGet",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("nuget", "Engineering", RepoInclusionLevel.AllItems),
                        new RepoDefinition("nuget", "Home", RepoInclusionLevel.AllItems),
                        new RepoDefinition("nuget", "NuGet2", RepoInclusionLevel.AllItems),
                        new RepoDefinition("nuget", "NuGet.Client", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "corefx",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "corefx",
                    WorkingLabels = new[] { "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("dotnet", "cli", RepoInclusionLevel.AllItems),
                        new RepoDefinition("dotnet", "CoreCLR", RepoInclusionLevel.AllItems),
                        new RepoDefinition("dotnet", "corefx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("dotnet", "wcf", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "k-perf",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "perfers",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    LabelFilter = "Perf",
                    Repos = new RepoDefinition[] {
                        // bespoke
                        new RepoDefinition("aspnet", "benchmarks", RepoInclusionLevel.AllItems),
                        // and others
                        new RepoDefinition("aspnet", "aspnet-docker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet-win-docker", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "BasicMiddleware", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Caching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Coherence-Signed", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CompilationAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CoreCLR", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DataProtection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnvm", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-cli-commands", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-do", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "dotnet-watch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Entropy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "FileSystem", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Helios", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "homebrew-dnx", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Hosting", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HttpClient", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "IISIntegration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "KestrelHttpServer", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "libuv-build", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Logging", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PlatformAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Proxy", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ResponseCaching", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Roslyn", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Security", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "ServerTests", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Session", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Setup", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Signing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "StaticFiles", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Universe", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "UserSecrets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebListener", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebSockets", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Antiforgery", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "aspnet.xunit", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Common", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "CORS", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DependencyInjection", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Diagnostics", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "DnxTools", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EventNotification", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "HtmlAbstractions", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-ajax-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "jquery-validation-unobtrusive", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "JsonPatch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Localization", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStore", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "MusicStoreAngular2", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Mvc", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "NodeServices", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "PackageSearch", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Razor", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "RazorTooling", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Routing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Testing", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Configuration", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework6", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework.Benchmarks", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "EntityFramework.Docs", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Identity", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Microsoft.Data.Sqlite", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Options", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SqlClient", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "azurecache",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    //WorkingLabel = "2 - In Progress",
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "AzureCache", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "AzureCacheCI", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "LocalCache", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "RedisShim", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "tooling",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    WorkingLabels = new[] { "2 - Working", "1 - Working", "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "BrowserLink", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Scaffolding", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Templates", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Tooling", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "Tooling-Internal", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "vsweb-docs", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "vsweb-publish", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "webhooks",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    WorkingLabels = new[] { "2 - In Progress" },
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "WebHooks", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WebHooks-Signed", RepoInclusionLevel.AllItems),
                    },
                }
            },
            {
                "other",
                new RepoSetDefinition {
                    AssociatedPersonSetName = "",
                    //WorkingLabel = "2 - In Progress",
                    Repos = new RepoDefinition[] {
                        new RepoDefinition("aspnet", "NodeServices", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "NuGet", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "NuGet.Prototypes", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Client-Cpp", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Client-Java", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Client-JS", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Client-Net", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Redis", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-Server", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-ServiceBus", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "SignalR-SqlServer", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "teamcity-azure-active-directory", RepoInclusionLevel.AllItems),
                        new RepoDefinition("aspnet", "WawsTest", RepoInclusionLevel.AllItems),
                    },
                }
            },
        };

        public RepoDataSet GetRepoDataSet()
        {
            return new Models.RepoDataSet(_repoSetList);
        }
    }
}
